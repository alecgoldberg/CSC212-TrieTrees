Much of the initial research done on this project was done together as a group, to ensure that everyone in our group had a good general understanding of this data structure. Being such a collaborative project, we used the CS50 IDE, allowing us to work on the code simultaneously. 
All of the methods were discussed and written down together. 
In the CS50 ide, we worked together to create a template to work upon. 
From there, we broke up major divisions of the project based on relative strength, interests, and capabilities. 
Alec implemented the code that tokenized the input text file, while Bella worked on using the words in her function to insert them into the trie tree. 
As our main focus was efficiency and organization we decided that we should keep our code organized using classes, so Jake created the constructors and destructors of our nested class.
We soon realized that we could not progress on any of our functions without a system to take the character and assign it an index, so Gianna worked on this function, as she has a very good understanding of the ASCII system, and how to convert between that and hexadecimal.
From there, we still needed to implement a search function. Alec had a good fundamental understanding of the algorithm, so he was assigned to this task. 
For the delete function, we realized early on that it would be a complex implementation. Gianna wanted to take lead on this, and aided by Jake, worked on the delete function. 
Bella was very interested in working on the visualization aspect, so she worked on this portion of the code. This came with many challenges, so we brainstormed as a group.
 Although we broke up the code, we found that with a topic like this, where everything is interconnected, it was difficult to do each function individually. By the end, everyone contributed to each other's respective parts, and we give credit to everyone in our group for every part of the code. Aiding this active collaboration was the CS50 IDE.
We worked together in the CS50 ide, so all contributions were made directly there. We realized that we should have individually uploaded to our github repository, however we made the mistake of not creating it early enough, so all of our contributions were uploaded together. We found that working in a collaborative environment such as CS50 allowed us to be more productive, allowing us to code and troubleshoot on our own machines. 
